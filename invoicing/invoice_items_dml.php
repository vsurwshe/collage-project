<?php

// Data functions for table invoice_items

// This script and data application were generated by AppGini 4.50
// Download AppGini for free from http://www.bigprof.com/appgini/download/

function invoice_items_insert(){
	global $Translation;

	if($_GET['insert_x']){$_POST=$_GET;}

	// mm: can member insert record?
	$arrPerm=getTablePermissions('invoice_items');
	if(!$arrPerm[1]){
		return 0;
	}

	$data['invoice'] = makeSafe($_POST['invoice']);
	$data['item'] = makeSafe($_POST['item']);
	$data['unit_price'] = makeSafe($_POST['unit_price']);
	$data['qty'] = makeSafe($_POST['qty']);
	$data['tax'] = makeSafe($_POST['tax']);
	if($data['unit_price'] == '') $data['unit_price'] = "0";
	if($data['qty'] == '') $data['qty'] = "1";
	if($data['tax'] == '') $data['tax'] = "0";

	// hook: invoice_items_before_insert
	if(function_exists('invoice_items_before_insert')){
		$args=array();
		if(!invoice_items_before_insert($data, getMemberInfo(), $args)){ return FALSE; }
	}

	sql('insert into `invoice_items` set `invoice`=' . (($data['invoice'] != '') ? "'{$data['invoice']}'" : 'NULL') . ', `item`=' . (($data['item'] != '') ? "'{$data['item']}'" : 'NULL') . ', `unit_price`=' . (($data['unit_price'] != '') ? "'{$data['unit_price']}'" : 'NULL') . ', `qty`=' . (($data['qty'] != '') ? "'{$data['qty']}'" : 'NULL') . ', `tax`=' . (($data['tax'] != '') ? "'{$data['tax']}'" : 'NULL'));
	$recID=mysql_insert_id();

	// hook: invoice_items_after_insert
	if(function_exists('invoice_items_after_insert')){
		$data['selectedID']=$recID;
		$args=array();
		if(!invoice_items_after_insert($data, getMemberInfo(), $args)){ return; }
	}

	// mm: save ownership data
	sql("insert into membership_userrecords set tableName='invoice_items', pkValue='$recID', memberID='".getLoggedMemberID()."', dateAdded='".time()."', dateUpdated='".time()."', groupID='".getLoggedGroupID()."'");

	return (get_magic_quotes_gpc() ? stripslashes($recID) : $recID);
}

function invoice_items_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false){
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('invoice_items');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='invoice_items' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='invoice_items' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
		// delete allowed, so continue ...
	}else{
		return FALSE;
	}

	// hook: invoice_items_before_delete
	if(function_exists('invoice_items_before_delete')){
		$args=array();
		if(!invoice_items_before_delete($selected_id, $skipChecks, getMemberInfo(), $args)){ return FALSE; }
	}

	sql("delete from `invoice_items` where `id`='$selected_id'");

	// hook: invoice_items_after_delete
	if(function_exists('invoice_items_after_delete')){
		$args=array();
		invoice_items_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='invoice_items' and pkValue='$selected_id'");
}

function invoice_items_update($selected_id){
	global $Translation;

	if($_GET['update_x']){$_POST=$_GET;}

	// mm: can member edit record?
	$arrPerm=getTablePermissions('invoice_items');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='invoice_items' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='invoice_items' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){ // allow update?
		// update allowed, so continue ...
	}else{
		return;
	}

	$data['invoice'] = makeSafe($_POST['invoice']);
	$data['item'] = makeSafe($_POST['item']);
	$data['unit_price'] = makeSafe($_POST['unit_price']);
	$data['qty'] = makeSafe($_POST['qty']);
	$data['tax'] = makeSafe($_POST['tax']);
	$data['selectedID']=makeSafe($selected_id);

	// hook: invoice_items_before_update
	if(function_exists('invoice_items_before_update')){
		$args=array();
		if(!invoice_items_before_update($data, getMemberInfo(), $args)){ return FALSE; }
	}

	sql('update `invoice_items` set `invoice`=' . (($data['invoice'] != '') ? "'{$data['invoice']}'" : 'NULL') . ', `item`=' . (($data['item'] != '') ? "'{$data['item']}'" : 'NULL') . ', `unit_price`=' . (($data['unit_price'] != '') ? "'{$data['unit_price']}'" : 'NULL') . ', `qty`=' . (($data['qty'] != '') ? "'{$data['qty']}'" : 'NULL') . ', `tax`=' . (($data['tax'] != '') ? "'{$data['tax']}'" : 'NULL') . " where `id`='".makeSafe($selected_id)."'");

	// hook: invoice_items_after_update
	if(function_exists('invoice_items_after_update')){
		$args=array();
		if(!invoice_items_after_update($data, getMemberInfo(), $args)){ return FALSE; }
	}

	// mm: update ownership data
	sql("update membership_userrecords set dateUpdated='".time()."' where tableName='invoice_items' and pkValue='".makeSafe($selected_id)."'");

}

function invoice_items_form($selected_id = "", $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0){
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;


	// mm: get table permissions
	$arrPerm=getTablePermissions('invoice_items');
	if(!$arrPerm[1] && $selected_id==""){ return ""; }
	// combobox: invoice
	$combo_invoice = new DataCombo;
	$combo_invoice->Query = "select `id`, `code` from `invoices` order by 2";
	$combo_invoice->SelectName = 'invoice';
	$combo_invoice->ListType = 0;

	if($selected_id){
		// mm: check member permissions
		if(!$arrPerm[2]){
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='invoice_items' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='invoice_items' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID){
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID){
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("select * from `invoice_items` where `id`='".makeSafe($selected_id)."'");
		$row = mysql_fetch_array($res);
		$combo_invoice->SelectedData = $row["invoice"];
		$row['price']=sqlValue("select FORMAT(`price`, 2) from `invoice_items` where `id`='".makeSafe($selected_id)."'");
	}else{
		$combo_invoice->SelectedText = ( $_REQUEST['FilterField'][1]=='2' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "");
	}
	$combo_invoice->Render();

	// code for template based detail view forms

	// open the detail view template
	if(($_POST['dvprint_x'] || $_GET['dvprint_x']) && $selected_id){
		$templateCode=@implode('', @file('./templates/invoice_items_templateDVP.html'));
		$dvprint=true;
	}else{
		$templateCode=@implode('', @file('./templates/invoice_items_templateDV.html'));
		$dvprint=false;
	}

	// process form title
	$templateCode=str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Invoice item details', $templateCode);
	// process buttons
	if($arrPerm[1]){ // allow insert?
		$templateCode=str_replace('<%%INSERT_BUTTON%%>', '<input type="image" src="insert.gif" name="insert" alt="' . $Translation['add new record'] . '" onclick="return validateData();">', $templateCode);
	}else{
		$templateCode=str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}
	if($selected_id){
		$templateCode=str_replace('<%%DVPRINT_BUTTON%%>', '<input type="image" src="print.gif" vspace="1" name="dvprint" id="dvprint" alt="' . $Translation['printer friendly view'] . '" onclick="document.myform.reset(); return true;" style="margin-bottom: 20px;">', $templateCode);
		if($AllowUpdate){
			$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '<input type="image" src="update.gif" vspace="1" name="update" alt="' . $Translation['update record'] . '" onclick="return validateData();">', $templateCode);
		}else{
			$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);

			// set records to read only if user can't insert new records
			if(!$arrPerm[1]){
				$jsReadOnly.="\n\n\tif(document.getElementsByName('id').length){ document.getElementsByName('id')[0].readOnly=true; }\n";
				$jsReadOnly.="\n\n\tif(document.getElementsByName('invoice').length){ var invoice=document.getElementsByName('invoice')[0]; invoice.disabled=true; invoice.style.backgroundColor='white'; invoice.style.color='black'; }\n";
				$jsReadOnly.="\n\n\tif(document.getElementsByName('item').length){ document.getElementsByName('item')[0].readOnly=true; }\n";
				$jsReadOnly.="\n\n\tif(document.getElementsByName('unit_price').length){ document.getElementsByName('unit_price')[0].readOnly=true; }\n";
				$jsReadOnly.="\n\n\tif(document.getElementsByName('qty').length){ document.getElementsByName('qty')[0].readOnly=true; }\n";
				$jsReadOnly.="\n\n\tif(document.getElementsByName('tax').length){ document.getElementsByName('tax')[0].readOnly=true; }\n";
				$jsReadOnly.="\n\n\tif(document.getElementsByName('price').length){ document.getElementsByName('price')[0].readOnly=true; }\n";

				$noUploads=true;
			}
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
			$templateCode=str_replace('<%%DELETE_BUTTON%%>', '<input type="image" src="delete.gif" vspace="1" name="delete" alt="' . $Translation['delete record'] . '" onClick="return confirm(\'' . $Translation['are you sure?'] . '\');">', $templateCode);
		}else{
			$templateCode=str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode=str_replace('<%%DESELECT_BUTTON%%>', "<input type=image src=deselect.gif vspace=1 name=deselect alt=\"" . $Translation['deselect record'] . "\" onclick=\"document.myform.reset(); return true;\">", $templateCode);
	}else{
		$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode=str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode=str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? "<input type=image src=cancel.gif vspace=1 name=deselect alt=\"" . $Translation['deselect record'] . "\" onclick=\"document.myform.reset(); return true;\">" : ''), $templateCode);
	}

	// process combos
	$templateCode=str_replace('<%%COMBO(invoice)%%>', $combo_invoice->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(invoice)%%>', $combo_invoice->MatchText, $templateCode);

	// process foreign key links
	if($selected_id){
		$templateCode=str_replace('<%%PLINK(invoice)%%>', ($combo_invoice->SelectedData ? "<span id=invoices_plink1 style=\"visibility: hidden;\"><a href=invoices_view.php?SelectedID=".$combo_invoice->SelectedData."><img border=0 src=lookup.gif></a></span>" : ''), $templateCode);
	}

	// process images
	$templateCode=str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(invoice)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(item)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(unit_price)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(qty)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(tax)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(price)%%>', '', $templateCode);

	// process values
	if($selected_id){
		$templateCode=str_replace('<%%VALUE(id)%%>', htmlspecialchars($row['id'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%VALUE(invoice)%%>', htmlspecialchars($row['invoice'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%VALUE(item)%%>', htmlspecialchars($row['item'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%VALUE(unit_price)%%>', htmlspecialchars($row['unit_price'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%VALUE(qty)%%>', htmlspecialchars($row['qty'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%VALUE(tax)%%>', htmlspecialchars($row['tax'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%VALUE(price)%%>', htmlspecialchars($row['price'], ENT_QUOTES), $templateCode);
	}else{
		$templateCode=str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode=str_replace('<%%VALUE(invoice)%%>', '', $templateCode);
		$templateCode=str_replace('<%%VALUE(item)%%>', '', $templateCode);
		$templateCode=str_replace('<%%VALUE(unit_price)%%>', '0', $templateCode);
		$templateCode=str_replace('<%%VALUE(qty)%%>', '1', $templateCode);
		$templateCode=str_replace('<%%VALUE(tax)%%>', '0', $templateCode);
		$templateCode=str_replace('<%%VALUE(price)%%>', '', $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans){
		$templateCode=str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode=str_replace('<%%', '<!--', $templateCode);
	$templateCode=str_replace('%%>', '-->', $templateCode);
	// hide links to inaccessible tables
	$templateCode.="\n\n<script>\n";
	$arrTables=getTableList();
	foreach($arrTables as $name=>$caption){
		$templateCode.="\tif(document.getElementById('".$name."_link')!=undefined){\n";
		$templateCode.="\t\tdocument.getElementById('".$name."_link').style.visibility='visible';\n";
		$templateCode.="\t}\n";
		for($i=1; $i<10; $i++){
			$templateCode.="\tif(document.getElementById('".$name."_plink$i')!=undefined){\n";
			$templateCode.="\t\tdocument.getElementById('".$name."_plink$i').style.visibility='visible';\n";
			$templateCode.="\t}\n";
		}
	}

	$templateCode.=$jsReadOnly;

	$templateCode.="\n\tfunction validateData(){";
	$templateCode.="\n\t\treturn true;";
	$templateCode.="\n\t}";
	$templateCode.="\n</script>\n";


	// ajaxed auto-fill fields
	$templateCode.="<script>";
	$templateCode.="window.onload=function(){";


	$templateCode.="}";
	$templateCode.="</script>";

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode=preg_replace('/blank.gif" rel="lightbox\[.*?\]"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	// hook: invoice_items_dv
	if(function_exists('invoice_items_dv')){
		$args=array();
		invoice_items_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>